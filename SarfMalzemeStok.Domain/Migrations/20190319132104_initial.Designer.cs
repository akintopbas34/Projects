// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SarfMalzemeStok.Domain.Context;

namespace SarfMalzemeStok.Domain.Migrations
{
    [DbContext(typeof(SarfMalzemeStokContext))]
    [Migration("20190319132104_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.AlternativeMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Material1Id");

                    b.Property<int?>("Material2Id");

                    b.HasKey("Id");

                    b.HasIndex("Material1Id");

                    b.HasIndex("Material2Id");

                    b.ToTable("AlternativeMaterial");

                    b.HasData(
                        new { Id = 1, Material1Id = 1, Material2Id = 2 },
                        new { Id = 2, Material1Id = 2, Material2Id = 1 }
                    );
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirmaAdi");

                    b.Property<string>("FirmaKodu");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new { Id = 1, FirmaAdi = "Firma1", FirmaKodu = "F1" },
                        new { Id = 2, FirmaAdi = "Firma2", FirmaKodu = "F2" }
                    );
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.CompanyMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AsgariPartiBuyuklugu");

                    b.Property<double>("BirimMaliyet");

                    b.Property<int>("CompanyId");

                    b.Property<int>("MaterialId");

                    b.Property<int>("TedarikSuresi");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("MaterialId");

                    b.ToTable("CompanyMaterial");

                    b.HasData(
                        new { Id = 1, AsgariPartiBuyuklugu = 0, BirimMaliyet = 340.0, CompanyId = 1, MaterialId = 1, TedarikSuresi = 60 },
                        new { Id = 2, AsgariPartiBuyuklugu = 3, BirimMaliyet = 1340.0, CompanyId = 2, MaterialId = 2, TedarikSuresi = 42 },
                        new { Id = 3, AsgariPartiBuyuklugu = 3, BirimMaliyet = 1340.0, CompanyId = 1, MaterialId = 2, TedarikSuresi = 42 },
                        new { Id = 4, AsgariPartiBuyuklugu = 3, BirimMaliyet = 1340.0, CompanyId = 1, MaterialId = 2, TedarikSuresi = 42 },
                        new { Id = 5, AsgariPartiBuyuklugu = 100, BirimMaliyet = 1340.0, CompanyId = 1, MaterialId = 3, TedarikSuresi = 30 }
                    );
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Consumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Birim");

                    b.Property<DateTime>("KullanimTarihi");

                    b.Property<int>("MaterialId");

                    b.Property<int>("TuketimMiktari");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Consumption");
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("EmniyetStok");

                    b.Property<string>("MaliyetSiniflandirmasi");

                    b.Property<string>("MalzemeAdi");

                    b.Property<string>("MalzemeHakkindaNotlar");

                    b.Property<string>("MalzemeKodu");

                    b.Property<int>("MalzemeninKullanimOmru");

                    b.Property<string>("SabitPartiBuyuklugu");

                    b.Property<string>("TeknikResim");

                    b.Property<double>("YenidenSiparisSeviyesi");

                    b.Property<double>("YillikTasmaOrani");

                    b.HasKey("Id");

                    b.ToTable("Material");

                    b.HasData(
                        new { Id = 1, EmniyetStok = 50.0, MaliyetSiniflandirmasi = "A", MalzemeAdi = "TK1745", MalzemeHakkindaNotlar = "Malzeme Kaliteli", MalzemeKodu = "1745", MalzemeninKullanimOmru = 0, SabitPartiBuyuklugu = "1 Adet", YenidenSiparisSeviyesi = 75.0, YillikTasmaOrani = 0.05 },
                        new { Id = 2, EmniyetStok = 1.0, MaliyetSiniflandirmasi = "B", MalzemeAdi = "TKY60336", MalzemeHakkindaNotlar = "Malzeme kalitesiz", MalzemeKodu = "60336", MalzemeninKullanimOmru = 0, SabitPartiBuyuklugu = "3 Adet", YenidenSiparisSeviyesi = 1.0, YillikTasmaOrani = 0.05 },
                        new { Id = 3, EmniyetStok = 75.0, MaliyetSiniflandirmasi = "C", MalzemeAdi = "TKY30198", MalzemeHakkindaNotlar = "Malzeme orta kalitede", MalzemeKodu = "30198", MalzemeninKullanimOmru = 0, SabitPartiBuyuklugu = "100 Adet", YenidenSiparisSeviyesi = 100.0, YillikTasmaOrani = 0.05 }
                    );
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.MaterialStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AtolyedekiMiktar");

                    b.Property<double>("DepodakiMiktar");

                    b.Property<int>("MaterialId");

                    b.Property<double>("StokMiktari");

                    b.Property<double>("TedarikAsamasindakiMiktar");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialStock");

                    b.HasData(
                        new { Id = 1, AtolyedekiMiktar = 0.0, DepodakiMiktar = 0.0, MaterialId = 1, StokMiktari = 624.017, TedarikAsamasindakiMiktar = 0.0 },
                        new { Id = 2, AtolyedekiMiktar = 0.0, DepodakiMiktar = 0.0, MaterialId = 2, StokMiktari = 1.0, TedarikAsamasindakiMiktar = 0.0 },
                        new { Id = 3, AtolyedekiMiktar = 0.0, DepodakiMiktar = 0.0, MaterialId = 3, StokMiktari = 1580.0, TedarikAsamasindakiMiktar = 0.0 }
                    );
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyMaterialId");

                    b.Property<DateTime>("SiparisTamamlanmaZamani");

                    b.Property<DateTime>("SiparisVerilmeZamani");

                    b.Property<double>("SiparisVermeMaliyeti");

                    b.Property<bool>("SiparisinGerceklesmeDurumu");

                    b.HasKey("Id");

                    b.HasIndex("CompanyMaterialId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.ProductInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcikSATMiktari");

                    b.Property<int>("DahiliUretimSuresi");

                    b.Property<DateTime>("ImalataSonVerilisTarihi");

                    b.Property<int>("MalGirisiIslemeSuresi");

                    b.Property<int>("MaterialId");

                    b.Property<double>("ToplamAcikSiparisMiktari");

                    b.Property<double>("ToplamAcikSiparisTutari");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("ProductInformation");

                    b.HasData(
                        new { Id = 1, AcikSATMiktari = 50.0, DahiliUretimSuresi = 0, ImalataSonVerilisTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), MalGirisiIslemeSuresi = 10, MaterialId = 1, ToplamAcikSiparisMiktari = 0.0, ToplamAcikSiparisTutari = 0.0 },
                        new { Id = 2, AcikSATMiktari = 0.0, DahiliUretimSuresi = 0, ImalataSonVerilisTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), MalGirisiIslemeSuresi = 270, MaterialId = 2, ToplamAcikSiparisMiktari = 15.0, ToplamAcikSiparisTutari = 30.0 },
                        new { Id = 3, AcikSATMiktari = 0.0, DahiliUretimSuresi = 0, ImalataSonVerilisTarihi = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), MalGirisiIslemeSuresi = 6, MaterialId = 3, ToplamAcikSiparisMiktari = 12000.0, ToplamAcikSiparisTutari = 5000.0 }
                    );
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.RefusalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IadeMiktari");

                    b.Property<string>("IadeNedeni");

                    b.Property<DateTime>("IadeTarihi");

                    b.Property<int>("OrderId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("RefusalInformation");
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Wip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaterialId");

                    b.Property<string>("TezgahAdi");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("Wip");
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.AlternativeMaterial", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.Material", "material1")
                        .WithMany()
                        .HasForeignKey("Material1Id");

                    b.HasOne("SarfMalzemeStok.Domain.Model.Material", "material2")
                        .WithMany()
                        .HasForeignKey("Material2Id");
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.CompanyMaterial", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.Company", "company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SarfMalzemeStok.Domain.Model.Material", "material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Consumption", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.Material", "material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.MaterialStock", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.Material", "material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Order", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.CompanyMaterial", "companyMaterial")
                        .WithMany()
                        .HasForeignKey("CompanyMaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.ProductInformation", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.Material", "material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.RefusalInformation", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.Order", "order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SarfMalzemeStok.Domain.Model.Wip", b =>
                {
                    b.HasOne("SarfMalzemeStok.Domain.Model.Material", "material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
